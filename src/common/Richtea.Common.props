<!--
    Sets properties common to all .NET projects using Richtea conventions
-->

<Project ToolsVersion="14.0"
    xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <!--
      Two of the important jobs we do are creating a default StyleCop configuration file if
      none exists, and creating a default .editorconfig if none exists. These are both 
      solution-level items, so they assume we have a root directory in which to create
      them. We have a property called RtRootDir to represent this root directory (by
      convention, it's the solution directory).

      Building in Visual Studio this isn't a problem because that always builds the solution,
      so the SolutionDir property is available.

      However, with the .NET CLI it's often not the case. And it seems that developing in
      VS code also throws up issues, possibly because it's using the CLI too, or working in
      a way similar to how the CLI does.

      Our answer is to require developers to specify the RtRootDir property directly. This 
      means no SolutionDir property needs to be available. You can do this conveniently by
      creating a Directory.Build.props file in the root directory with the following contents
      (remember to fix the comment delimiters):
        <Project>
            <PropertyGroup>
                <!- - Define root build directory, see Richtea.RecommendedPractices - ->
                <RtRootDir>$(MSBuildThisFileDirectory)</RtRootDir>
            </PropertyGroup>
        </Project>

      If this property is not defined then an error is raised in Richtea.Common.targets.
      Why do we do this instead of using SolutionDir (when available)? Because SolutionDir
      is typically available within Visual Studio, but not when building on the server. If
      we fixed the problem without developer intervention within Visual Studio, the first
      time the problem surfaces would be in the CI build. Fail fast, fix quickly!
    -->
    <PropertyGroup>
        <RtRootDir>$([MSBuild]::EnsureTrailingSlash('$(RtRootDir)'))</RtRootDir>
    </PropertyGroup>

    <PropertyGroup>
        <DebugType>portable</DebugType>
        <ci>true</ci>
    </PropertyGroup>

</Project>